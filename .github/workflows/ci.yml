name: Continuous Integration

on:
  push:
    paths:
      - '**.f90'
      - '**.fpp'
      - '**.py'
      - '**.yml'
      - 'mfc.sh'
      - 'golden.txt'
      - 'CMakeLists.txt'

  pull_request:

  workflow_dispatch:

jobs:
  github:
    name: (GitHub) Test Suite
    strategy:
      matrix:
        include:
          - os:  ubuntu-latest
            debug: --no-debug
          - os:  ubuntu-latest
            debug: --debug
          - os:  macos-latest
            debug: --no-debug
            gcc: 11
          - os:  macos-latest
            debug: --debug
            gcc: 11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup
        if:   matrix.os == 'macos-latest'
        run: |
          echo "OMPI_FC=gfortran-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "OMPI_CXX=g++-${{ matrix.gcc }}"     >> $GITHUB_ENV
          echo "OMPI_MPICC=gcc-${{ matrix.gcc }}"   >> $GITHUB_ENV
          echo "CC=gcc-${{ matrix.gcc }}"           >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.gcc }}"          >> $GITHUB_ENV
          echo "FC=gfortran-${{ matrix.gcc }}"      >> $GITHUB_ENV
          brew install wget make python make cmake coreutils gcc@${{ matrix.gcc }}
          HOMEBREW_MAKE_JOBS=$(nproc) brew install --cc=gcc-${{ matrix.gcc }} --verbose --build-from-source open-mpi

      - name: Setup
        if:   matrix.os == 'ubuntu-latest'
        run:  sudo apt install tar wget make cmake gcc g++ python3 python3-dev "openmpi-*" libopenmpi-dev
       
      - name: Build
        run:  /bin/bash mfc.sh build -j $(nproc) ${{ matrix.debug }}

      - name: Test Suite
        run:  /bin/bash mfc.sh test  -j $(nproc) -a ${{ matrix.debug }}

  self-cpu:
    name: (Self) Test Suite - CPU
    strategy:
      matrix:
        include:
          - os: [self-hosted, wingtip]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'MFlowCode/MFC'
    steps:
      - name: Clone
        uses: actions/checkout@v3
          
      - name: Setup
        run:  echo "test"
        
      - name: Build
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh build -j 8

      - name: Test Suite
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh test  -j 8 -a

  self-gpu:
    name: (Self) Test Suite - GPU
    strategy:
      matrix:
        include:
          - os: [self-hosted, wingtip]
          - debug: [--debug, --no-debug]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'MFlowCode/MFC'
    steps:
      - name: Clone
        uses: actions/checkout@v3
          
      - name: Setup
        run:  echo "test"
        
      - name: Build
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh build -j 8 --gpu ${{ matrix.debug }}

      - name: Test Suite
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh test -j 8 -b mpirun --gpu -a ${{ matrix.debug }}

#   ice-gpu:
#     name: (COC-ICE) Test Suite - GPU
#     strategy:
#       matrix:
#         include:
#           - os: [self-hosted, cocice]
#     runs-on: ${{ matrix.os }}
#     if: github.repository == 'MFlowCode/MFC'
#     steps:
#       - name: Clone
#         uses: actions/checkout@v3
          
#       - name: Setup
#         run:  echo "test"
        
#       - name: Build
#         run:  |
#           module purge
#           module load nvhpc
#           /usr/bin/bash mfc.sh build -j 4 --gpu

#       - name: Test Suite
#         run:  |
#           qsub -I -q coc-ice-gpu -l nodes=1:ppn=8:gpus=2:teslav100
#           module purge
#           module load nvhpc
#           /usr/bin/bash mfc.sh test -j 4 -b mpirun --gpu -a
#           exit
