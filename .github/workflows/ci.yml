name: Continous Integration

on:
  push:
    branches: [ GPU ]
    paths:
      - '**.f90'
      - '**.fpp'
      - 'mfc.sh'
      - '**.py'
      - '**.yaml'
      - '**.yml'
      - 'golden.txt'
      - 'Makefile'
      - 'makefile'
      - 'CMakeLists.txt'
      - Dockerfile

  pull_request:
    branches: [ GPU ]

  workflow_dispatch:

jobs:
  tests:
    name:  CI Test Runner
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone MFC
        uses: actions/checkout@v3
      - name: Post-Clone Setup
        run:  chmod +x ./mfc.sh
      - name: Build Docker Image
        run:  docker build . --tag mfc
      - name: Test MFC
        run:  docker run -it --mount=bind,source="$(pwd)",target=/home/me/MFC mfc /bin/bash -c "cd MFC && ./mfc.sh test -j $(nproc) -m release-cpu"
      - name: Upload logs
        uses: actions/upload-artifact@v3
        if:   always()
        with:
          name: ${{ matrix.os }}
          path: |
            build/**/*.log
            tests/**/*.dat
            tests/**/*.out
            tests/**/*.inp
            tests/**/*.txt
            tests/*.txt

#- name: Install Dependencies (via Brew)
#  if: matrix.os == 'macos-latest'
#  run: |
#    brew install wget make python make cmake coreutils
#    brew install gcc@${{ matrix.gcc }}
#    brew install --build-from-source open-mpi
#
# - name: Setup & Environment Variables
#   if:   matrix.os == 'macos-latest'
#   run: |
#     echo "HOMEBREW_CC=gcc-${{ matrix.gcc }}"  >> $GITHUB_ENV
#     echo "HOMEBREW_CXX=g++-${{ matrix.gcc }}" >> $GITHUB_ENV
#     echo "OMPI_MPICC=gcc-${{ matrix.gcc }}"   >> $GITHUB_ENV
#     echo "OMPI_CXX=g++-${{ matrix.gcc }}"     >> $GITHUB_ENV
#     echo "OMPI_FC=gfortran-${{ matrix.gcc }}" >> $GITHUB_ENV
