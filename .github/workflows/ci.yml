name: CI

on:
  push:
    branches: [ master, GPU ]
    paths:
      - '**.f90'
      - '**.fpp'
      - '**.sh'
      - '**.py'
      - '**.yaml'
      - '**.yml'
      - 'golden.txt'
      - 'Makefile'
      - 'makefile'

  pull_request:
    branches: [ master, GPU ]

  workflow_dispatch:

jobs:
  CI:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Clone MFC
        uses: actions/checkout@v2

      - name: Install Dependencies (via Aptitude)
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y tar wget make cmake gcc g++ python3 openmpi-* python python-dev python3-dev python3-venv libopenmpi-dev
          pip3 install pyyaml rich fypp

      - name: Install Nvidia HPC SDK
        run: |
          echo 'deb [trusted=yes] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' | sudo tee /etc/apt/sources.list.d/nvhpc.list
          sudo apt-get update  -y
          sudo apt-get install -y nvhpc-22-2
          NVARCH=`uname -s`_`uname -m`
          NVCOMPILERS="/opt/nvidia/hpc_sdk"
          VERSION="22.2"
          CUDA_VERSION="11.6"
          echo "PATH=$NVCOMPILERS/$NVARCH/$VERSION/compilers/bin:$NVCOMPILERS/$NVARCH/$VERSION/comm_libs/mpi/bin:$PATH" >> $GITHUB_ENV
          echo "CUDA_HOME=$NVCOMPILERS/$NVARCH/$VERSION/cuda/" >> $GITHUB_ENV
          echo "CUDA_DIR=$NVCOMPILERS/$NVARCH/$VERSION/cuda/" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$NVCOMPILERS/$NVARCH/$VERSION/cuda/$CUDA_VERSION/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Build & Test MFC (CPU)
        run: |
          chmod +x ./mfc.sh
          ./mfc.sh build -m release-cpu -j $(nproc)
          ./mfc.sh test -j $(nproc)

      - name: Build & Test MFC (GPU)
        run: |
          chmod +x ./mfc.sh
          ./mfc.sh build -m release-gpu -j $(nproc)
          ./mfc.sh test -j $(nproc)

      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.os }}
          path: |
            build/**/*.log
            tests/**/*.dat
            tests/**/*.out
            tests/**/*.inp
            tests/**/*.txt
            tests/*.txt
