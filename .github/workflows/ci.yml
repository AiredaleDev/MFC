name: Continuous Integration

on:
  push:
    paths:
      - '**.f90'
      - '**.fpp'
      - '**.py'
      - '**.yml'
      - 'mfc.sh'
      - 'golden.txt'
      - 'CMakeLists.txt'

  pull_request:

  workflow_dispatch:

jobs:
  github:
    name: (GitHub) Test Suite
    strategy:
      matrix:
        include:
          - os:  ubuntu-latest
          - os:  macos-latest
            gcc: 11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup
        if:   matrix.os == 'macos-latest'
        run: |
          echo "OMPI_FC=gfortran-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "OMPI_CXX=g++-${{ matrix.gcc }}"     >> $GITHUB_ENV
          echo "OMPI_MPICC=gcc-${{ matrix.gcc }}"   >> $GITHUB_ENV
          echo "CC=gcc-${{ matrix.gcc }}"           >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.gcc }}"          >> $GITHUB_ENV
          echo "FC=gfortran-${{ matrix.gcc }}"      >> $GITHUB_ENV
          brew install wget make python make cmake coreutils gcc@${{ matrix.gcc }}
          HOMEBREW_MAKE_JOBS=$(nproc) brew install --cc=gcc-${{ matrix.gcc }} --verbose --build-from-source open-mpi

      - name: Setup
        if:   matrix.os == 'ubuntu-latest'
        run:  sudo apt install tar wget make cmake gcc g++ python3 python3-dev "openmpi-*" libopenmpi-dev
       
      - name: Build
        run:  /bin/bash mfc.sh build -j $(nproc)

      - name: Test Suite
        run:  /bin/bash mfc.sh test  -j $(nproc) -a

  self-cpu:
    name: (Self) Test Suite - CPU
    strategy:
      matrix:
        include:
          - os: [self-hosted, wingtip]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'MFlowCode/MFC'
    steps:
      - name: Clone
        uses: actions/checkout@v3
          
      - name: Setup
        run:  echo "test"
        
      - name: Build
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh build -j 4

      - name: Test Suite
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh test  -j 4 -a

  self-gpu:
    name: (Self) Test Suite - GPU
    strategy:
      matrix:
        include:
          - os: [self-hosted, wingtip]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'MFlowCode/MFC'
    steps:
      - name: Clone
        uses: actions/checkout@v3
          
      - name: Setup
        run:  echo "test"
        
      - name: Build
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh build -j 4 --gpu

      - name: Test Suite
        run:  |
          module use /opt/nvidia/hpc_sdk/modulefiles/
          module load nvhpc
          /bin/bash mfc.sh test  -b mpirun --gpu -a

  ice-gpu:
    name: (COC-ICE) Test Suite - GPU
    strategy:
      matrix:
        include:
          - os: [self-hosted, cocice]
    runs-on: ${{ matrix.os }}
    if: github.repository == 'MFlowCode/MFC'
    steps:
      - name: Clone
        uses: actions/checkout@v3
          
      - name: Setup
        run:  echo "test"
        
      - name: Build
        run:  |
          module purge
          module load nvhpc
          /usr/bin/bash mfc.sh build -j 4 --gpu

      - name: Test Suite
        run:  |
          qsub -I -q coc-ice-gpu -l nodes=1:ppn=6:gpus=1:teslav100
          module purge
          module load nvhpc
          /bin/bash mfc.sh test  -b mpirun --gpu -a
          exit
