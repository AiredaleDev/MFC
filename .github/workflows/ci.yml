name: CI

on:
  push:
    branches: [ master, GPU ]
    paths:
      - '**.f90'
      - '**.fpp'
      - 'mfc.sh'
      - '**.py'
      - '**.yaml'
      - '**.yml'
      - 'golden.txt'
      - 'Makefile'
      - 'makefile'
      - 'CMakeLists.txt'

  pull_request:
    branches: [ master, GPU ]

  workflow_dispatch:

jobs:
  CI:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone MFC
        uses: actions/checkout@v2

      - name: Post-Clone Setup
        run: |
          chmod +x ./mfc.sh
      
      - name: Setup & Environment Variables
        if:   matrix.os == 'macos-latest'
        run: |
          echo "HOMEBREW_CC=gcc-${{ matrix.gcc }}"  >> $GITHUB_ENV
          echo "HOMEBREW_CXX=g++-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "OMPI_MPICC=gcc-${{ matrix.gcc }}"   >> $GITHUB_ENV
          echo "OMPI_CXX=g++-${{ matrix.gcc }}"     >> $GITHUB_ENV
          echo "OMPI_FC=gfortran-${{ matrix.gcc }}" >> $GITHUB_ENV
      
      - name: Install Dependencies (via Aptitude)
        if:   matrix.os == 'ubuntu-latest'
        run: >-
          sudo apt install -y tar wget make cmake gcc g++ python3 openmpi-*
          python python-dev python3-dev python3-venv libopenmpi-dev

      - name: Install Dependencies (via Brew)
        if: matrix.os == 'macos-latest'
        run: |
          brew install wget make python make cmake coreutils
          brew install gcc@${{ matrix.gcc }}
          brew install --build-from-source open-mpi
          
      - name: Test MFC (CPU)
        run:  ./mfc.sh test -j $(nproc) -m release-cpu 

      - name: Upload logs
        uses: actions/upload-artifact@v2
        if:   always()
        with:
          name: ${{ matrix.os }}
          path: |
            build/**/*.log
            tests/**/*.dat
            tests/**/*.out
            tests/**/*.inp
            tests/**/*.txt
            tests/*.txt
